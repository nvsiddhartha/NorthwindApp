{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/categories-resolver.ts","webpack:///./src/app/_resolvers/category-detail-resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/category.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/order.service.ts","webpack:///./src/app/_services/product.service.ts","webpack:///./src/app/_services/supplier.service.ts","webpack:///./src/app/actions.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart/cart.component.css","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/category/category-add/category-add.component.css","webpack:///./src/app/category/category-add/category-add.component.html","webpack:///./src/app/category/category-add/category-add.component.ts","webpack:///./src/app/category/category-detail/category-detail.component.css","webpack:///./src/app/category/category-detail/category-detail.component.html","webpack:///./src/app/category/category-detail/category-detail.component.ts","webpack:///./src/app/category/category-edit/category-edit.component.css","webpack:///./src/app/category/category-edit/category-edit.component.html","webpack:///./src/app/category/category-edit/category-edit.component.ts","webpack:///./src/app/category/category.component.css","webpack:///./src/app/category/category.component.html","webpack:///./src/app/category/category.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/orders/order-detail/order-detail.component.css","webpack:///./src/app/orders/order-detail/order-detail.component.html","webpack:///./src/app/orders/order-detail/order-detail.component.ts","webpack:///./src/app/orders/orders.component.css","webpack:///./src/app/orders/orders.component.html","webpack:///./src/app/orders/orders.component.ts","webpack:///./src/app/product/product-add/product-add.component.css","webpack:///./src/app/product/product-add/product-add.component.html","webpack:///./src/app/product/product-add/product-add.component.ts","webpack:///./src/app/product/product-detail/product-detail.component.css","webpack:///./src/app/product/product-detail/product-detail.component.html","webpack:///./src/app/product/product-detail/product-detail.component.ts","webpack:///./src/app/product/product-edit/product-edit.component.css","webpack:///./src/app/product/product-edit/product-edit.component.html","webpack:///./src/app/product/product-edit/product-edit.component.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/shop/product-card/product-card.component.css","webpack:///./src/app/shop/product-card/product-card.component.html","webpack:///./src/app/shop/product-card/product-card.component.ts","webpack:///./src/app/shop/shop.component.css","webpack:///./src/app/shop/shop.component.html","webpack:///./src/app/shop/shop.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result: T;\r\n    pagination: Pagination;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Category } from '../_models/category';\r\nimport { CategoryService } from '../_services/category.service';\r\n\r\n@Injectable()\r\nexport class CategoriesResolver implements Resolve<Category[]> {\r\n    constructor(\r\n        private categoryService: CategoryService,\r\n        private router: Router,\r\n        private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Category[]> {\r\n        return this.categoryService.getCategories().pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Category } from '../_models/category';\r\nimport { CategoryService } from '../_services/category.service';\r\n\r\n@Injectable()\r\nexport class CategoryDetailResolver implements Resolve<Category> {\r\n    constructor(\r\n        private categoryService: CategoryService,\r\n        private router: Router,\r\n        private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Category> {\r\n        return this.categoryService.getCategory(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/category']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\ndeclare let alertify: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertifyService {\r\n  constructor() {}\r\n\r\n  confirm(message: string, okCallback: () => any) {\r\n    alertify.confirm(message, function(e) {\r\n      if (e) {\r\n        okCallback();\r\n      } else {}\r\n    });\r\n  }\r\n\r\n  success(message: string) {\r\n    alertify.success(message);\r\n  }\r\n\r\n  error(message: string) {\r\n    alertify.error(message);\r\n  }\r\n\r\n  warning(message: string) {\r\n    alertify.warning(message);\r\n  }\r\n\r\n  message(message: string) {\r\n    alertify.message(message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Category } from '../_models/category';\r\nimport { Product } from '../_models/product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n  baseUrl = environment.apiUrl + 'category';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCategories(): Observable<Category[]> {\r\n    return this.http.get<Category[]>(this.baseUrl);\r\n  }\r\n\r\n  getCategory(id: number): Observable<Category> {\r\n    return this.http.get<Category>(this.baseUrl + '/' + id );\r\n  }\r\n\r\n  getProductsByCategory(id: number): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.baseUrl + '/' + id + '/products');\r\n  }\r\n\r\n  addCategory(model: Category): Observable<any> {\r\n    return this.http.post<Category>(this.baseUrl + '/add', model);\r\n  }\r\n\r\n  editCategory(id: number, model: Category): Observable<any> {\r\n    return this.http.post<Category>(this.baseUrl + '/' + id, model);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n                if (error instanceof HttpErrorResponse) {\r\n                    if (error.status === 401) {\r\n                        return throwError(error.statusText);\r\n                    }\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if (applicationError) {\r\n                        console.error(applicationError);\r\n                        return throwError(applicationError);\r\n                    }\r\n                    const serverError = error.error;\r\n                    let modelStateErrors = '';\r\n                    if (serverError) {\r\n                      if (error.status === 400) {\r\n                        // handle validation error\r\n                        for (const f in serverError) {\r\n                          if (f) {\r\n                            if (typeof serverError[f] === 'object') {\r\n                              for (const key in serverError[f]) {\r\n                                if (key) {\r\n                                  console.log(serverError[f][key]);\r\n                                  modelStateErrors += serverError[f][key] + '\\n';\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    // const serverError = error.error;\r\n                    // let modelStateErrors = '';\r\n                    // if (serverError && typeof serverError === 'object') {\r\n                    //     for (const key in serverError) {\r\n                    //         if (serverError[key]) {\r\n                    //             modelStateErrors += serverError[key] + '\\n';\r\n                    //         }\r\n                    //     }\r\n                    // }\r\n                    return throwError(modelStateErrors || serverError || 'Server Error');\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Product } from '../_models/product';\r\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { map } from 'rxjs/operators';\r\nimport { Order, OrderDetail } from '../_models/order';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  baseUrl = environment.apiUrl + 'order';\r\n\r\n  private _cartDataSource = new BehaviorSubject<Order>(this.initializeOrder());\r\n  cartData = this._cartDataSource.asObservable();\r\n\r\n  private _noOfItems$ = new BehaviorSubject<number>(this.getNoOfItemsInCart());\r\n  get noOfItems$(): Observable<number> {\r\n    return this._noOfItems$.asObservable();\r\n  }\r\n\r\n  private order: Order;\r\n  private noOfItems: number;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getOrders(page?, itemsPerPage?, orderParams?): Observable<PaginatedResult<Order[]>> {\r\n    const paginatedResult: PaginatedResult<Order[]> = new PaginatedResult<Order[]>();\r\n    let params = new HttpParams();\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append('pageNumber', page);\r\n      params = params.append('pageSize', itemsPerPage);\r\n    }\r\n\r\n    if (orderParams != null) {\r\n      if (orderParams.orderDate != null) {\r\n        params = params.append('orderDate', orderParams.orderDate);\r\n      }\r\n      if (orderParams.employeeId != null) {\r\n        params = params.append('employeeId', orderParams.employeeId);\r\n      }\r\n      if (orderParams.customerId != null) {\r\n        params = params.append('customerId', orderParams.customerId);\r\n      }\r\n    }\r\n\r\n    return this.http\r\n      .get<Order[]>(this.baseUrl, { observe: 'response', params })\r\n      .pipe(\r\n        map(response => {\r\n          paginatedResult.result = response.body;\r\n          if (response.headers.get('Pagination') != null) {\r\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n          }\r\n          return paginatedResult;\r\n        })\r\n      );\r\n  }\r\n\r\n  getOrder(id): Observable<Order> {\r\n    return this.http.get<Order>(this.baseUrl + '/' + id );\r\n  }\r\n\r\n  addOrder(): Observable<any> {\r\n    this.order.customerId = 'VINET';\r\n    this.order.orderDate = new Date();\r\n    return this.http.post<Order>(this.baseUrl + '/add', this.order);\r\n  }\r\n\r\n  initializeOrder(): Order {\r\n    if (sessionStorage.getItem('cart') == null) {\r\n      this.order = {\r\n        customerId: '',\r\n        orderId: 0,\r\n        employeeId: null,\r\n        customer: null,\r\n        employee: null,\r\n        freight: null,\r\n        orderDate: null,\r\n        orderDetails: [],\r\n        requiredDate: null,\r\n        shipAddress: null,\r\n        shipCity: null,\r\n        shipCountry: null,\r\n        shipPostalCode: null,\r\n        shipRegion: null,\r\n        shipVia: null,\r\n        shippedDate: null\r\n      };\r\n    } else {\r\n      this.order = JSON.parse(sessionStorage.getItem('cart'));\r\n    }\r\n\r\n    return this.order;\r\n  }\r\n\r\n  getNoOfItemsInCart(): number {\r\n    if (sessionStorage.getItem('cart') == null) {\r\n      return 0;\r\n    } else {\r\n      this.order = JSON.parse(sessionStorage.getItem('cart'));\r\n      let ct = 0;\r\n        this.order.orderDetails.map(\r\n          o => {\r\n            ct += o.quantity;\r\n          }\r\n        );\r\n        return ct;\r\n    }\r\n  }\r\n\r\n  addToCart(item: OrderDetail) {\r\n    // push item\r\n    let itemExists = false;\r\n    this.order.orderDetails.map(\r\n      detail => {\r\n        if (detail.productId === item.productId) {\r\n          itemExists = true;\r\n          detail.quantity++;\r\n        }\r\n      }\r\n    );\r\n    if (!itemExists) {\r\n      this.order.orderDetails.push(item);\r\n    }\r\n\r\n    // update sessionStorage\r\n    sessionStorage.setItem('cart', JSON.stringify(this.order));\r\n    // notify suscribers\r\n    this._cartDataSource.next(this.order);\r\n    this._noOfItems$.next(this.getNoOfItemsInCart());\r\n  }\r\n\r\n  getOrderInCart(): Order {\r\n    return this.order;\r\n  }\r\n\r\n  clearCart() {\r\n    if (sessionStorage.getItem('cart') != null) {\r\n      sessionStorage.removeItem('cart');\r\n    }\r\n    this.initializeOrder();\r\n    // notify suscribers\r\n    this._cartDataSource.next(this.order);\r\n\r\n    this._noOfItems$.next(0);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Product } from '../_models/product';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  baseUrl = environment.apiUrl + 'product';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(page?, itemsPerPage?, productParams?): Observable<PaginatedResult<Product[]>> {\r\n    const paginatedResult: PaginatedResult<Product[]> = new PaginatedResult<Product[]>();\r\n    let params = new HttpParams();\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append('pageNumber', page);\r\n      params = params.append('pageSize', itemsPerPage);\r\n    }\r\n\r\n    if (productParams != null) {\r\n      if (productParams.productName != null) {\r\n        params = params.append('productName', productParams.productName);\r\n      }\r\n      if (productParams.categoryId != null) {\r\n        params = params.append('categoryId', productParams.categoryId);\r\n      }\r\n    }\r\n\r\n    return this.http.get<Product[]>(this.baseUrl, { observe: 'response', params })\r\n      .pipe(\r\n        map(response => {\r\n          paginatedResult.result = response.body;\r\n          if (response.headers.get('Pagination') != null) {\r\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n          }\r\n          return paginatedResult;\r\n        })\r\n      );\r\n  }\r\n\r\n  getProduct(id: number): Observable<Product> {\r\n    return this.http.get<Product>(this.baseUrl + '/' + id );\r\n  }\r\n\r\n  addProduct(model: Product): Observable<any> {\r\n    return this.http.post<Product>(this.baseUrl + '/add', model);\r\n  }\r\n\r\n  editProduct(id: number, model: Product): Observable<any> {\r\n    return this.http.post<Product>(this.baseUrl + '/' + id, model);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Supplier } from '../_models/supplier';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupplierService {\r\n  baseUrl = environment.apiUrl + 'supplier';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getSuppliers(): Observable<Supplier[]> {\r\n    return this.http.get<Supplier[]>(this.baseUrl);\r\n  }\r\n}\r\n","\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { NgRedux, NgReduxModule } from '@angular-redux/store';\r\nimport { IAppState, rootReducer, INITIAL_STATE } from './store';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { appRoutes } from './routes';\r\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\r\nimport { AlertifyService } from './_services/alertify.service';\r\nimport { CategoryService } from './_services/category.service';\r\nimport { CategoryDetailComponent } from './category/category-detail/category-detail.component';\r\nimport { CategoriesResolver } from './_resolvers/categories-resolver';\r\nimport { CategoryDetailResolver } from './_resolvers/category-detail-resolver';\r\nimport { CategoryEditComponent } from './category/category-edit/category-edit.component';\r\nimport { CategoryAddComponent } from './category/category-add/category-add.component';\r\nimport { ProductService } from './_services/product.service';\r\nimport { ProductDetailComponent } from './product/product-detail/product-detail.component';\r\nimport { ProductEditComponent } from './product/product-edit/product-edit.component';\r\nimport { ProductAddComponent } from './product/product-add/product-add.component';\r\nimport { SupplierService } from './_services/supplier.service';\r\nimport { OrderDetailComponent } from './orders/order-detail/order-detail.component';\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { ProductCardComponent } from './shop/product-card/product-card.component';\r\nimport { CartComponent } from './cart/cart.component';\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      CategoryComponent,\r\n      NavComponent,\r\n      ProductComponent,\r\n      OrdersComponent,\r\n      OrderDetailComponent,\r\n      HomeComponent,\r\n      CategoryDetailComponent,\r\n      CategoryEditComponent,\r\n      CategoryAddComponent,\r\n      ProductDetailComponent,\r\n      ProductEditComponent,\r\n      ProductAddComponent,\r\n      ShopComponent,\r\n      ProductCardComponent,\r\n      CartComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      RouterModule.forRoot(appRoutes),\r\n      PaginationModule.forRoot(),\r\n      BsDatepickerModule.forRoot(),\r\n      NgReduxModule\r\n   ],\r\n   providers: [\r\n      ErrorInterceptorProvider,\r\n      AlertifyService,\r\n      CategoryService,\r\n      CategoriesResolver,\r\n      CategoryDetailResolver,\r\n      ProductService,\r\n      SupplierService\r\n   ],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule {\r\n   // constructor(ngRedux: NgRedux<IAppState>) {\r\n   //    ngRedux.configureStore(rootReducer, INITIAL_STATE);\r\n   // }\r\n }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <br />\\r\\n  <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"placeOrder()\\\">\\r\\n    <table class=\\\"table table-condensed table-hover\\\">\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let o of order.orderDetails\\\">\\r\\n          <td>{{ o.productName }}</td>\\r\\n          <td>{{ o.unitPrice | number: \\\"1.2-5\\\" | currency }}</td>\\r\\n          <td>{{ o.quantity }}</td>\\r\\n          <td align=\\\"right\\\">\\r\\n            {{ o.unitPrice * o.quantity | number: \\\"1.2-5\\\" | currency }}\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n        <td colspan=\\\"4\\\" align=\\\"right\\\">\\r\\n          Total Price : {{ totalPrice | number: \\\"1.2-5\\\" | currency }}\\r\\n        </td>\\r\\n      </tfoot>\\r\\n    </table>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { OrderService } from '../_services/order.service';\r\nimport { Order } from '../_models/order';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit {\r\n  order: Order;\r\n  totalPrice: number;\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.totalPrice = 0;\r\n    this.order = this.orderService.getOrderInCart();\r\n    this.order.orderDetails.map(o => {\r\n      this.totalPrice += o.unitPrice * o.quantity;\r\n    });\r\n  }\r\n\r\n  placeOrder() {\r\n    this.orderService.addOrder().subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.orderService.clearCart();\r\n        this.alertify.success('Order Added !');\r\n        this.router.navigate(['/orders/', data.orderId]);\r\n      },\r\n      err => {\r\n        this.alertify.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <form #categoryForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"add()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"categoryName\\\">Category Name:</label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"text\\\"\\r\\n            name=\\\"categoryName\\\" required [(ngModel)]=\\\"category.categoryName\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"description\\\">Description:</label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <textarea class=\\\"form-control\\\" name=\\\"description\\\"\\r\\n            rows=\\\"2\\\" required [(ngModel)]=\\\"category.description\\\"></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\"> \\r\\n        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\r\\n          <button type=\\\"submit\\\" [disabled]=\\\"!categoryForm.valid\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n        </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Category } from 'src/app/_models/category';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { error } from '@angular/compiler/src/util';\r\n\r\n@Component({\r\n  selector: 'app-category-add',\r\n  templateUrl: './category-add.component.html',\r\n  styleUrls: ['./category-add.component.css']\r\n})\r\nexport class CategoryAddComponent implements OnInit {\r\n  category: Category = {\r\n    categoryId: 0,\r\n    categoryName: '',\r\n    description: '',\r\n    products: null };\r\n\r\n  constructor(\r\n    private categoryService: CategoryService,\r\n    private router: Router,\r\n    private alertify: AlertifyService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  add() {\r\n    this.categoryService.addCategory(this.category)\r\n    .subscribe(data => {\r\n      this.alertify.success('Category Added !');\r\n      this.router.navigate(['/category/', data.categoryId]);\r\n    }, (err) => {\r\n      this.alertify.error(err);\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/category']);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <table class=\\\"table table-condensed table-hover\\\">\\r\\n    <tbody>\\r\\n      <tr>\\r\\n        <td>Category Id</td>\\r\\n        <td>{{category?.categoryId}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Category Name</td>\\r\\n        <td>{{category?.categoryName}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Description</td>\\r\\n        <td>{{category?.description}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td></td>\\r\\n        <td>\\r\\n          <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/category/edit/', category.categoryId]\\\">Edit</a>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { Category } from 'src/app/_models/category';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-category-detail',\r\n  templateUrl: './category-detail.component.html',\r\n  styleUrls: ['./category-detail.component.css']\r\n})\r\nexport class CategoryDetailComponent implements OnInit {\r\n  category: Category;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private alertify: AlertifyService,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.category = data['category'];\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <form [formGroup]=\\\"categoryForm\\\" (ngSubmit)=\\\"edit()\\\" class=\\\"form-horizontal\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"categoryId\\\">Category Id:</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"categoryId\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"categoryName\\\">Category Name:</label>\\r\\n        <div class=\\\"col-sm-10\\\">\\r\\n          <input [ngClass]=\\\"{'is-invalid': categoryForm.get('categoryName').errors && categoryForm.get('categoryName').touched}\\\"\\r\\n            class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"categoryName\\\">\\r\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"categoryForm.get('categoryName').touched && categoryForm.get('categoryName').hasError('required')\\\">\\r\\n            Category Name is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label col-sm-2\\\" for=\\\"description\\\">Description:</label>\\r\\n        <div class=\\\"col-sm-10\\\">\\r\\n          <textarea class=\\\"form-control\\\" rows=\\\"2\\\" formControlName=\\\"description\\\"\\r\\n            [ngClass]=\\\"{'is-invalid': categoryForm.get('description').errors && categoryForm.get('description').touched}\\\">\\r\\n          </textarea>\\r\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"categoryForm.get('description').touched && categoryForm.get('description').hasError('required')\\\">\\r\\n              Description is required</div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n          </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Category } from 'src/app/_models/category';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-category-edit',\r\n  templateUrl: './category-edit.component.html',\r\n  styleUrls: ['./category-edit.component.css']\r\n})\r\nexport class CategoryEditComponent implements OnInit {\r\n  category: Category;\r\n  categoryForm: FormGroup;\r\n\r\n  constructor(\r\n    private alertify: AlertifyService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private categoryService: CategoryService,\r\n    private fb: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n      this.route.data.subscribe(data => {\r\n        this.category = data['category'];\r\n        this.createCategoryForm();\r\n      });\r\n    }\r\n\r\n    createCategoryForm() {\r\n      this.categoryForm = this.fb.group({\r\n        categoryId: [this.category.categoryId, Validators.required],\r\n        categoryName: [this.category.categoryName, [Validators.required, Validators.maxLength(15)]],\r\n        description: [this.category.description, Validators.required],\r\n      });\r\n    }\r\n\r\n    edit() {\r\n      this.categoryService.editCategory(this.category.categoryId, this.categoryForm.value)\r\n        .subscribe(data => {\r\n          this.alertify.success('Category Edited !');\r\n          this.router.navigate(['/category/', data.categoryId]);\r\n        }, (err) => {\r\n          this.alertify.error(err);\r\n        });\r\n    }\r\n\r\n    cancel() {\r\n      this.router.navigate(['/category/', this.category.categoryId]);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <table class=\\\"table table-condensed table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Id</th>\\r\\n        <th>Name</th>\\r\\n        <th>Description</th>\\r\\n        <th><a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/category/new']\\\">Add New</a></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let c of categories\\\">\\r\\n        <td>{{c.categoryId}}</td>\\r\\n        <td>{{c.categoryName}}</td>\\r\\n        <td>{{c.description}}</td>\\r\\n        <td>\\r\\n          <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/category/', c.categoryId]\\\">\\r\\n            <i class=\\\"fa fa-pencil-square-o\\\"></i>\\r\\n          </a>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Category } from '../_models/category';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.css']\r\n})\r\nexport class CategoryComponent implements OnInit {\r\n  categories: Category[];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.categories = data['categories'];\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  home works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Northwind App</a>\\r\\n  <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n    <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/category']\\\">Categories</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/product']\\\">Products</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/orders']\\\">Orders</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/shop']\\\">Shop</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <ul class=\\\"nav justify-content-end\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/cart']\\\">\\r\\n        <i class=\\\"fa fa-shopping-cart\\\" style='font-size:24px'></i>\\r\\n        <span style=\\\"margin-left: .5rem;\\\" class=\\\"badge badge-light\\\">{{noOfItems}}</span>\\r\\n      </a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\" style=\\\"margin-left: .5rem;\\\">\\r\\n      <a class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/cart']\\\">\\r\\n        <i class=\\\"fa fa-shopping-cart\\\" style='font-size:24px'></i>\\r\\n        <span style=\\\"margin-left: .5rem;\\\" class=\\\"badge badge-light\\\">{{noOfItems$ |async}}</span>\\r\\n      </a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</nav>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { OrderService } from '../_services/order.service';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit, OnDestroy {\r\n\r\n  \r\n  subscription: Subscription;\r\n  noOfItems: string;\r\n\r\n  get noOfItems$(): Observable<number> {\r\n    return this.orderService.noOfItems$;\r\n  }\r\n\r\n  constructor(private orderService: OrderService) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.orderService.cartData.subscribe(\r\n      (order) => {\r\n        let ct = 0;\r\n        order.orderDetails.map(\r\n          o => {\r\n            ct += o.quantity;\r\n          }\r\n        );\r\n        this.noOfItems = ct.toString();\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"order\\\">\\r\\n  <br>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label class=\\\"col-2 col-form-label\\\">Order Id</label>\\r\\n    <div class=\\\"col-4\\\">\\r\\n        {{order.orderId}}\\r\\n    </div>\\r\\n    <label class=\\\"col-2 col-form-label\\\">Order Date</label>\\r\\n    <div class=\\\"col-4\\\">\\r\\n      {{order.orderDate | date: 'MM/dd/yyyy'}}\\r\\n    </div>\\r\\n  </div>\\r\\n  <table class=\\\"table table-condensed table-hover\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Product</th>\\r\\n          <th>Unitprice</th>\\r\\n          <th>Quantity</th>\\r\\n          <th>Discount</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let c of order.orderDetails\\\">\\r\\n          <td>{{c.productId}}</td>\\r\\n          <td>{{c.unitPrice | number:'1.2-5' | currency}}</td>\\r\\n          <td>{{c.quantity}}</td>\\r\\n          <td>{{c.discount | number:'1.2-5' | currency}}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { OrderService } from 'src/app/_services/order.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Order } from 'src/app/_models/order';\r\n\r\n@Component({\r\n  selector: 'app-order-detail',\r\n  templateUrl: './order-detail.component.html',\r\n  styleUrls: ['./order-detail.component.css']\r\n})\r\nexport class OrderDetailComponent implements OnInit {\r\n  order: Order;\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private alertify: AlertifyService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.GetOrder(+this.route.snapshot.params['id']);\r\n  }\r\n\r\n  GetOrder(id: number) {\r\n    this.orderService.getOrder(id)\r\n    .subscribe(\r\n      (data) => {\r\n        this.order = data;\r\n      },\r\n      (err) => {\r\n        this.alertify.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  Cancel() {\r\n    this.router.navigate(['/orders']);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <br>\\r\\n  <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadOrders()\\\" novalidate>\\r\\n    <label for=\\\"orderDate\\\" class=\\\"mb-2 mr-sm-2\\\">Order Date</label>\\r\\n    <input class=\\\"form-control mb-2 mr-sm-2\\\" type=\\\"text\\\" name=\\\"orderDate\\\" title=\\\"Searches +/- 10 days\\\" [bsConfig]=\\\"bsConfig\\\" \\r\\n          bsDatepicker [(ngModel)]=\\\"orderParams.orderDate\\\">\\r\\n    <!-- <label for=\\\"categoryId\\\" class=\\\"mb-2 mr-sm-2\\\">Category Id</label>\\r\\n    <select class=\\\"form-control mb-2 mr-sm-2\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"productParams.categoryId\\\">\\r\\n      <option *ngFor=\\\"let c of categories\\\" [ngValue]=\\\"c.categoryId\\\">\\r\\n        {{c.categoryName}}\\r\\n      </option>\\r\\n    </select> -->\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary mb-2 mr-sm-2\\\">Search</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary mb-2\\\" (click)=\\\"reset()\\\">Reset</button>\\r\\n  </form>\\r\\n  <br>\\r\\n  <table class=\\\"table table-condensed table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Id</th>\\r\\n        <th>Order Date</th>\\r\\n        <th>Customer</th>\\r\\n        <th>Employee</th>\\r\\n        <th>Shipped To</th>\\r\\n        <th>Freight</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let c of orders\\\">\\r\\n        <td>{{c.orderId}}</td>\\r\\n        <td>{{c.orderDate | date:'MM/dd/yyyy'}}</td>\\r\\n        <td>{{c.customer}}</td>\\r\\n        <td>{{c.employee}}</td>\\r\\n        <td><span *ngIf=\\\"c.shipCity\\\">{{c.shipCity}}, {{c.shipCountry}}</span></td>\\r\\n        <td>{{c.freight | number:'1.2-5' | currency}}</td>\\r\\n        <td>\\r\\n          <a class=\\\"btn btn-primary btn-sm\\\" [routerLink]=\\\"['/orders/', c.orderId]\\\">\\r\\n            <i class=\\\"fa fa-pencil-square-o\\\"></i>\\r\\n          </a>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div *ngIf=\\\"pagination\\\" class=\\\"d-flex justify-content-center\\\">\\r\\n    <pagination [maxSize]=\\\"5\\\" [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\r\\n      [(ngModel)]=\\\"pagination.currentPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\"\\r\\n      firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n    </pagination>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { Order } from '../_models/order';\r\nimport { OrderService } from '../_services/order.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  pagination: Pagination;\r\n  orderParams: any = {};\r\n  orders: Order[];\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private alertify: AlertifyService) { }\r\n\r\n  ngOnInit() {\r\n    this.bsConfig = {\r\n      containerClass: 'theme-default',\r\n      dateInputFormat: 'MM/DD/YYYY'\r\n    };\r\n    this.pagination = {\r\n      currentPage: 1,\r\n      itemsPerPage: 5,\r\n      totalItems: 0,\r\n      totalPages: 0\r\n    };\r\n    this.getOrders();\r\n  }\r\n\r\n  pageChanged(event: PageChangedEvent): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.pagination.itemsPerPage = event.itemsPerPage;\r\n    this.getOrders();\r\n  }\r\n\r\n  loadOrders() {\r\n    this.getOrders();\r\n  }\r\n\r\n  reset() {\r\n    this.orderParams = {};\r\n    this.getOrders();\r\n  }\r\n\r\n  getOrders() {\r\n    this.orderParams.orderDate = new DatePipe('en-US').transform(this.orderParams.orderDate, 'MM/dd/yyyy');\r\n    this.orderService.getOrders(this.pagination.currentPage, this.pagination.itemsPerPage, this.orderParams)\r\n    .subscribe(\r\n      data => {\r\n        this.orders = data.result;\r\n        this.pagination = data.pagination;\r\n      },\r\n      err => {\r\n        this.alertify.error(err);\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div *ngIf=\\\"product\\\">\\r\\n      <app-product-detail\\r\\n        [product]=\\\"product\\\"\\r\\n        [isNew]=\\\"true\\\"\\r\\n        (cancelEvent)=\\\"cancel($event)\\\"\\r\\n      ></app-product-detail>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Product } from 'src/app/_models/product';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-product-add',\r\n  templateUrl: './product-add.component.html',\r\n  styleUrls: ['./product-add.component.css']\r\n})\r\nexport class ProductAddComponent implements OnInit {\r\n  product: Product = {\r\n    productId: 0,\r\n    productName: null,\r\n    categoryId: null,\r\n    unitPrice: null,\r\n    supplierId: null,\r\n    quantityPerUnit: null,\r\n    unitsInStock: null,\r\n    unitsOnOrder: null,\r\n    reorderLevel: null,\r\n    discontinued: false,\r\n    categoryName: null,\r\n    supplierName: null\r\n  };\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  cancel($event: string) {\r\n    this.router.navigate(['/product']);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"submit()\\\" class=\\\"\\\">\\r\\n  <br>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Product Name</label>\\r\\n    <div class=\\\"col-4\\\">\\r\\n      <input [ngClass]=\\\"{'is-invalid': productForm.get('productName').errors && productForm.get('productName').touched}\\\"\\r\\n        class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"productName\\\">\\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"productForm.get('productName').touched && productForm.get('productName').hasError('required')\\\">\\r\\n        Product Name is required</div>\\r\\n    </div>\\r\\n    <label *ngIf=\\\"!isNew\\\" for=\\\"example-number-input\\\" class=\\\"col-2 col-form-label\\\">Product Id</label>\\r\\n    <div *ngIf=\\\"!isNew\\\" class=\\\"col-4\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"productId\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"example-number-input\\\" class=\\\"col-2 col-form-label\\\">Category</label>\\r\\n    <div class=\\\"col-4\\\">\\r\\n      <select [ngClass]=\\\"{'is-invalid': productForm.get('categoryId').errors && productForm.get('categoryId').touched}\\\"\\r\\n        class=\\\"form-control\\\" formControlName=\\\"categoryId\\\">\\r\\n        <option *ngFor=\\\"let c of categories\\\" [ngValue]=\\\"c.categoryId\\\">\\r\\n          {{c.categoryName}}\\r\\n        </option>\\r\\n      </select>\\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"productForm.get('categoryId').touched && productForm.get('categoryId').hasError('required')\\\">\\r\\n        Category is required</div>\\r\\n    </div>\\r\\n    <label for=\\\"example-number-input\\\" class=\\\"col-2 col-form-label\\\">Supplier</label>\\r\\n    <div class=\\\"col-4\\\">\\r\\n      <select class=\\\"form-control\\\" formControlName=\\\"supplierId\\\">\\r\\n        <option *ngFor=\\\"let s of suppliers\\\" [ngValue]=\\\"s.supplierId\\\">\\r\\n          {{s.companyName}}\\r\\n        </option>\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"example-number-input\\\" class=\\\"col-2 col-form-label\\\">Unit Price</label>\\r\\n    <div class=\\\"col-4\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"unitPrice\\\">\\r\\n    </div>\\r\\n    <label for=\\\"example-number-input\\\" class=\\\"col-2 col-form-label\\\">Quantity Per Unit</label>\\r\\n    <div class=\\\"col-4\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"quantityPerUnit\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"example-number-input\\\" class=\\\"col-2 col-form-label\\\">Units In Stock</label>\\r\\n    <div class=\\\"col-4\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"unitsInStock\\\">\\r\\n    </div>\\r\\n    <label for=\\\"example-number-input\\\" class=\\\"col-2 col-form-label\\\">Units On Order</label>\\r\\n    <div class=\\\"col-4\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"unitsOnOrder\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"example-number-input\\\" class=\\\"col-2 col-form-label\\\">Reorder Level</label>\\r\\n    <div class=\\\"col-4\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" formControlName=\\\"reorderLevel\\\">\\r\\n    </div>\\r\\n    <label for=\\\"example-number-input\\\" class=\\\"col-2 col-form-label\\\">Discontinued</label>\\r\\n    <div class=\\\"col-4\\\">\\r\\n      <div class=\\\"form-check\\\">\\r\\n        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" formControlName=\\\"discontinued\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n      <div class=\\\"col-1\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-11\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Product } from 'src/app/_models/product';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ProductService } from 'src/app/_services/product.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\nimport { Category } from 'src/app/_models/category';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { SupplierService } from 'src/app/_services/supplier.service';\r\nimport { Supplier } from 'src/app/_models/supplier';\r\n\r\n@Component({\r\n  selector: 'app-product-detail',\r\n  templateUrl: './product-detail.component.html',\r\n  styleUrls: ['./product-detail.component.css']\r\n})\r\nexport class ProductDetailComponent implements OnInit {\r\n  @Input() product: Product;\r\n  @Input() isNew: boolean;\r\n  @Output() cancelEvent = new EventEmitter<string>();\r\n  productForm: FormGroup;\r\n  categories: Category[];\r\n  suppliers: Supplier[];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private productService: ProductService,\r\n    private categoryService: CategoryService,\r\n    private supplierService: SupplierService,\r\n    private alertify: AlertifyService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.createProductForm();\r\n    this.getCategories();\r\n    this.getSuppliers();\r\n  }\r\n\r\n  getCategories() {\r\n    this.categoryService.getCategories()\r\n      .subscribe(\r\n        (data) => {\r\n          this.categories = data;\r\n        },\r\n        (err) => {\r\n          this.alertify.error(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  getSuppliers() {\r\n    this.supplierService.getSuppliers()\r\n      .subscribe(\r\n        (data) => {\r\n          this.suppliers = data;\r\n        },\r\n        (err) => {\r\n          this.alertify.error(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  createProductForm() {\r\n    this.productForm = this.fb.group({\r\n      productId: [{ value: this.product.productId, disabled: true }],\r\n      categoryId: [this.product.categoryId, Validators.required],\r\n      productName: [this.product.productName, Validators.required],\r\n      unitPrice: [this.product.unitPrice],\r\n      supplierId: [this.product.supplierId],\r\n      quantityPerUnit: [this.product.quantityPerUnit],\r\n      unitsInStock: [this.product.unitsInStock],\r\n      unitsOnOrder: [this.product.unitsOnOrder],\r\n      reorderLevel: [this.product.reorderLevel],\r\n      discontinued: [this.product.discontinued]\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.isNew);\r\n    console.log(this.productForm.getRawValue());\r\n\r\n    if (this.isNew) {\r\n      this.productService.addProduct(this.productForm.getRawValue())\r\n        .subscribe(data => {\r\n          this.alertify.success('Product Added !');\r\n          this.router.navigate(['/product/', data.productId]);\r\n        }, (err) => {\r\n          this.alertify.error(err);\r\n        });\r\n    } else {\r\n      this.productService.editProduct(this.product.productId, this.productForm.getRawValue())\r\n        .subscribe(data => {\r\n          this.alertify.success('Product Edited !');\r\n          this.router.navigate(['/product/', data.productId]);\r\n        }, (err) => {\r\n          this.alertify.error(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelEvent.emit('Cancelled ...');\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div *ngIf=\\\"product\\\">\\r\\n    <app-product-detail\\r\\n      [product]=\\\"product\\\"\\r\\n      [isNew]=\\\"false\\\"\\r\\n      (cancelEvent)=\\\"cancel($event)\\\"\\r\\n    ></app-product-detail>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Product } from 'src/app/_models/product';\r\nimport { ProductService } from 'src/app/_services/product.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-product-edit',\r\n  templateUrl: './product-edit.component.html',\r\n  styleUrls: ['./product-edit.component.css']\r\n})\r\nexport class ProductEditComponent implements OnInit {\r\n  product: Product;\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private alertify: AlertifyService,\r\n    private router: Router,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.GetProduct(+this.route.snapshot.params['id']);\r\n  }\r\n\r\n  GetProduct(id: number) {\r\n    this.productService.getProduct(id)\r\n    .subscribe(\r\n      (data) => {\r\n        this.product = data;\r\n      },\r\n      (err) => {\r\n        this.alertify.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel($event: string) {\r\n    this.router.navigate(['/product']);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <br>\\r\\n  <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadProducts()\\\" novalidate>\\r\\n    <label for=\\\"productName\\\" class=\\\"mb-2 mr-sm-2\\\">Product Name</label>\\r\\n    <input class=\\\"form-control mb-2 mr-sm-2\\\" type=\\\"text\\\" name=\\\"productName\\\" [(ngModel)]=\\\"productParams.productName\\\">\\r\\n    <label for=\\\"categoryId\\\" class=\\\"mb-2 mr-sm-2\\\">Category Id</label>\\r\\n    <select class=\\\"form-control mb-2 mr-sm-2\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"productParams.categoryId\\\">\\r\\n      <option *ngFor=\\\"let c of categories\\\" [ngValue]=\\\"c.categoryId\\\">\\r\\n        {{c.categoryName}}\\r\\n      </option>\\r\\n    </select>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary mb-2 mr-sm-2\\\">Search</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary mb-2\\\" (click)=\\\"reset()\\\">Reset</button>\\r\\n  </form>\\r\\n  <br>\\r\\n  <table class=\\\"table table-condensed table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Id</th>\\r\\n        <th>Name</th>\\r\\n        <th>Category</th>\\r\\n        <th>Supplier</th>\\r\\n        <th>Unit Price</th>\\r\\n        <th><a class=\\\"btn btn-primary btn-sm\\\" [routerLink]=\\\"['/product/new']\\\">Add New</a></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let c of products\\\">\\r\\n        <td>{{c.productId}}</td>\\r\\n        <td>{{c.productName}}</td>\\r\\n        <td>{{c.categoryName}}</td>\\r\\n        <td>{{c.supplierName}}</td>\\r\\n        <td>{{c.unitPrice | number:'1.2-5' | currency}}</td>\\r\\n        <td>\\r\\n          <a class=\\\"btn btn-primary btn-sm\\\" [routerLink]=\\\"['/product/', c.productId]\\\">\\r\\n            <i class=\\\"fa fa-pencil-square-o\\\"></i>\\r\\n          </a>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div *ngIf=\\\"pagination\\\" class=\\\"d-flex justify-content-center\\\">\\r\\n    <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\r\\n      [(ngModel)]=\\\"pagination.currentPage\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\"\\r\\n      firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n    </pagination>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Product } from '../_models/product';\r\nimport { ProductService } from '../_services/product.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\r\nimport { Category } from '../_models/category';\r\nimport { CategoryService } from '../_services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.css']\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  products: Product[];\r\n  pagination: Pagination;\r\n  productParams: any = {};\r\n  categories: Category[];\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private categoryService: CategoryService,\r\n    private alertify: AlertifyService) {}\r\n\r\n  ngOnInit() {\r\n    this.pagination = {\r\n      currentPage: 1,\r\n      itemsPerPage: 5,\r\n      totalItems: 0,\r\n      totalPages: 0\r\n    };\r\n    this.getProducts();\r\n    this.getCategories();\r\n  }\r\n\r\n  loadProducts() {\r\n    this.getProducts();\r\n  }\r\n\r\n  getCategories() {\r\n    this.categoryService.getCategories()\r\n      .subscribe(\r\n        (data) => {\r\n          this.categories = data;\r\n        },\r\n        (err) => {\r\n          this.alertify.error(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  reset() {\r\n    this.productParams = {};\r\n    this.getProducts();\r\n  }\r\n\r\n  getProducts() {\r\n    this.productService.getProducts(this.pagination.currentPage, this.pagination.itemsPerPage, this.productParams)\r\n      .subscribe(\r\n        data => {\r\n          this.products = data.result;\r\n          this.pagination = data.pagination;\r\n        },\r\n        err => {\r\n          this.alertify.error(err);\r\n        });\r\n  }\r\n\r\n  pageChanged(event: PageChangedEvent): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.pagination.itemsPerPage = event.itemsPerPage;\r\n    this.getProducts();\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport { CategoryDetailComponent } from './category/category-detail/category-detail.component';\r\nimport { CategoriesResolver } from './_resolvers/categories-resolver';\r\nimport { CategoryDetailResolver } from './_resolvers/category-detail-resolver';\r\nimport { CategoryEditComponent } from './category/category-edit/category-edit.component';\r\nimport { CategoryAddComponent } from './category/category-add/category-add.component';\r\nimport { ProductEditComponent } from './product/product-edit/product-edit.component';\r\nimport { ProductAddComponent } from './product/product-add/product-add.component';\r\nimport { OrderDetailComponent } from './orders/order-detail/order-detail.component';\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { CartComponent } from './cart/cart.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: 'home', component: HomeComponent },\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        children: [\r\n            {path: 'category', component: CategoryComponent, resolve: {categories: CategoriesResolver}},\r\n            {path: 'category/new', component: CategoryAddComponent},\r\n            {path: 'category/:id', component: CategoryDetailComponent, resolve: {category: CategoryDetailResolver}},\r\n            {path: 'category/edit/:id', component: CategoryEditComponent, resolve: {category: CategoryDetailResolver}},\r\n        ]\r\n    },\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        children: [\r\n            { path: 'product', component: ProductComponent },\r\n            { path: 'product/new', component: ProductAddComponent },\r\n            { path: 'product/:id', component: ProductEditComponent },\r\n        ]\r\n    },\r\n    {\r\n        path: '',\r\n        runGuardsAndResolvers: 'always',\r\n        children: [\r\n            { path: 'orders', component: OrdersComponent },\r\n            { path: 'orders/:id', component: OrderDetailComponent },\r\n        ]\r\n    },\r\n    { path: 'shop', component: ShopComponent },\r\n    { path: 'cart', component: CartComponent },\r\n    { path: '**', redirectTo: 'home', pathMatch: 'full' },\r\n];\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\" style=\\\"width: 15rem; margin: 1rem;\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h5 class=\\\"card-title\\\">{{ product.productName }}</h5>\\r\\n    <p class=\\\"card-text\\\">\\r\\n      {{ product.unitPrice | number: \\\"1.2-5\\\" | currency }}\\r\\n    </p>\\r\\n    <button class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"addToCart()\\\">\\r\\n      <i class=\\\"fa fa-shopping-cart\\\"></i>\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Product } from 'src/app/_models/product';\r\nimport { OrderDetail } from 'src/app/_models/order';\r\n\r\n@Component({\r\n  selector: 'app-product-card',\r\n  templateUrl: './product-card.component.html',\r\n  styleUrls: ['./product-card.component.css']\r\n})\r\nexport class ProductCardComponent implements OnInit {\r\n  @Input() product: Product;\r\n  @Output() addToCartEvent = new EventEmitter<OrderDetail>();\r\n\r\n  orderDetail: OrderDetail;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addToCart() {\r\n    this.orderDetail = {\r\n      productId: this.product.productId,\r\n      discount: 0,\r\n      productName: this.product.productName,\r\n      orderId: 0,\r\n      quantity: 1,\r\n      unitPrice: this.product.unitPrice\r\n    };\r\n\r\n    this.addToCartEvent.emit(this.orderDetail);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n          <select class=\\\"form-control mb-2 mr-sm-2\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"categoryId\\\" (change)=\\\"getProducts()\\\">\\r\\n              <option *ngFor=\\\"let c of categories\\\" [ngValue]=\\\"c.categoryId\\\">\\r\\n                {{c.categoryName}}\\r\\n              </option>\\r\\n          </select>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"card-deck\\\" *ngIf=\\\"products\\\">\\r\\n      <app-product-card *ngFor=\\\"let p of products\\\" [product]=\\\"p\\\" (addToCartEvent)=\\\"addToCart($event)\\\"></app-product-card>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Category } from '../_models/category';\r\nimport { CategoryService } from '../_services/category.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Product } from '../_models/product';\r\nimport { OrderService } from '../_services/order.service';\r\nimport { select } from '@angular-redux/store';\r\nimport { NgRedux, NgReduxModule } from '@angular-redux/store';\r\nimport { IAppState, rootReducer, INITIAL_STATE } from '../store';\r\nimport { ADD_TO_CART, CLEAR_CART, REMOVE_FROM_CART } from \"../actions\";\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.css']\r\n})\r\nexport class ShopComponent implements OnInit, OnDestroy {\r\n\r\n  @select() order;\r\n  categories: Category[];\r\n  products: Product[];\r\n  categoryId: number;\r\n\r\n  constructor(\r\n    private categoryService: CategoryService,\r\n    private orderService: OrderService,\r\n    private alertify: AlertifyService,\r\n    private ngRedux: NgRedux<IAppState>\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getCategories();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }\r\n\r\n  getCategories() {\r\n    this.categoryService.getCategories().subscribe(\r\n      data => {\r\n        this.categories = data;\r\n      },\r\n      err => {\r\n        this.alertify.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  getProducts() {\r\n    this.categoryService.getProductsByCategory(this.categoryId).subscribe(\r\n      data => {\r\n        this.products = data;\r\n      },\r\n      err => {\r\n        this.alertify.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  addToCart($event) {\r\n    this.ngRedux.dispatch({type: ADD_TO_CART, item: $event});\r\n    this.orderService.addToCart($event);\r\n    this.alertify.success('Item added to cart');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:5000/api/'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}